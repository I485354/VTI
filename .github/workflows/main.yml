# .github/workflows/ci.yml
name: CI Workflow

on:
  push:
    paths:
      - 'VTI-frontend/**'
      - 'VTI-backend/**'
  pull_request:
    paths:
      - 'VTI-frontend/**'
      - 'VTI-backend/**'
  workflow_dispatch:

jobs:
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: Install dependencies
        working-directory: VTI-frontend
        run: npm install

      - name: Run lint
        working-directory: VTI-frontend
        run: npm run lint

      - name: Build project
        working-directory: VTI-frontend
        run: npm run build --prod

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run:  |
          OUTPUT=$(npx vercel deploy VTI-frontend/ --yes  --token=$VERCEL_TOKEN)
          echo "$OUTPUT"
          DEPLOY_URL=$(echo "$OUTPUT" | grep -oP 'https?://\S+' | head -n 1)
          echo "Deployment URL: $DEPLOY_URL"
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV

      - name: Alias Deployment to Custom Domain
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          if [ -z "$DEPLOY_URL" ]; then
            echo "No deployment URL found!"
            exit 1
          fi
          npx vercel alias $DEPLOY_URL vti-frontend.vercel.app --token=$VERCEL_TOKEN

      - name: Start Local Frontend Server for Tests
        working-directory: VTI-frontend
        run: |
          npm run start &
          echo "Waiting for local server to be ready..."
          while ! curl -s http://localhost:4200 > /dev/null; do
            sleep 1
          done

      - name: Run Cypress tests
        working-directory: VTI-frontend
        env:
          CYPRESS_BASE_URL: "http://localhost:4200"
        run: |
          npm install cypress
          npx cypress run   
          

     # - name: Run Cypress tests
     #   working-directory: VTI-frontend
     #   run: |
     #     npm install cypress
     #     npx cypress run

  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: VTI_database
          MYSQL_USER: Sello
          MYSQL_PASSWORD: VTI-database1234
          MYSQL_ROOT_PASSWORD: rootpassword
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping -h"127.0.0.1" --silent; do
            sleep 1
          done

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build and Test with Maven
        working-directory: VTI-backend
        run: |
          mvn clean install -Dmaven.compiler.source=17 -Dmaven.compiler.target=17 -DskipTests
          mvn test -Dspring.profiles.active=test

      - name: SonarCloud Scan
        working-directory: VTI-backend
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=I485354_VTI
